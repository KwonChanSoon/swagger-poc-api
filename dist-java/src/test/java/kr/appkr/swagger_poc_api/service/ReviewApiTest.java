/*
 * DB-LOCK-POC
 * 라라벨에 스웨거 적용 테스트를 위한 프로젝트
 *
 * OpenAPI spec version: 1
 * Contact: juwonkim@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package kr.appkr.swagger_poc_api.service;

import kr.appkr.swagger_poc_api.ApiException;
import kr.appkr.swagger_poc_api.model.ErrorDto;
import kr.appkr.swagger_poc_api.model.NewReviewRequest;
import kr.appkr.swagger_poc_api.model.ReviewDto;
import kr.appkr.swagger_poc_api.model.ReviewListResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReviewApi
 */
@Ignore
public class ReviewApiTest {

    private final ReviewApi api = new ReviewApi();

    
    /**
     * 새 리뷰를 등록합니다.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReviewTest() throws ApiException {
        String authorization = null;
        Long productId = null;
        NewReviewRequest body = null;
        ReviewDto response = api.createReview(authorization, productId, body);

        // TODO: test validations
    }
    
    /**
     * 리뷰를 삭제합니다.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReviewTest() throws ApiException {
        String authorization = null;
        Long productId = null;
        Long reviewId = null;
        api.deleteReview(authorization, productId, reviewId);

        // TODO: test validations
    }
    
    /**
     * 상품에 대한 리뷰 목록을 조회합니다.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReviewsTest() throws ApiException {
        String authorization = null;
        Long productId = null;
        String q = null;
        Long userId = null;
        String sortKey = null;
        String sortDirection = null;
        Integer page = null;
        Integer size = null;
        ReviewListResponse response = api.listReviews(authorization, productId, q, userId, sortKey, sortDirection, page, size);

        // TODO: test validations
    }
    
    /**
     * 리뷰를 수정합니다 (ON PURPOSE 10 SEC DELAY TO TEST PESSIMISTIC/OPTIMISTIC DB LOCK).
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReviewTest() throws ApiException {
        String authorization = null;
        Long productId = null;
        Long reviewId = null;
        NewReviewRequest body = null;
        ReviewDto response = api.updateReview(authorization, productId, reviewId, body);

        // TODO: test validations
    }
    
}
